{"version":3,"sources":["actions/types.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","securityUtils/setJWTToken.js","actions/projectActions.js","components/Project/CreateProjectButton.js","components/Project/ProjectItem.js","components/Dashboard.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","initialState","project_tasks","project_task","backlogReducer","state","action","type","payload","filter","projectSequence","errorReducer","projects","project","projectReducer","projectIdentifier","user","validToken","securityReducer","combineReducers","errors","backlog","security","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","setJWTToken","token","axios","defaults","headers","common","createProject","history","dispatch","a","post","push","response","data","CreateProjectButton","Fragment","to","className","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectName","description","onClick","bind","Component","connect","confirm","delete","Dashboard","getProjects","map","get","res","logout","localStorage","removeItem","Header","location","href","headerLinks","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","fullName","password","confirmPassword","newUser","createNewUser","required","Login","loginRequest","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cab35bab.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for BACKLOG ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nconst backlogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default backlogReducer;\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nconst errorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst securityReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: action.payload ? true : false,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default securityReducer;\n","import { combineReducers } from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import axios from \"axios\";\n\nexport const setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it.\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg start-button\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag pr-1\"></i> Project Board\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"></i> Update Project Info\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"></i> Delete Project\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport ProjectItem from \"./Project/ProjectItem\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"text-center\">Personal Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport { setJWTToken } from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decoded = jwt_decode(token);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\"></i>\n              {user.fullname}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"text-center mb-5\">Create Project form</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"text-center\">\n                  <input type=\"submit\" className=\"btn start-button mt-4\" />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"text-center mb-5\">Update Project form</h1>\n              <form onSubmit={this.onSubmit}>\n                <h6>Name</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <h6>ID</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                </div>\n                <h6>Description</h6>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"text-center\">\n                  <input type=\"submit\" className=\"btn start-button mt-4\" />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    switch (project_task.priority) {\n      case 1:\n        priorityClass = \"bg-danger text-light\";\n        priorityString = \"HIGH\";\n        break;\n      case 2:\n        priorityClass = \"bg-primary text-light\";\n        priorityString = \"MEDIUM\";\n        break;\n      default:\n        priorityClass = \"bg-secondary text-light\";\n        priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-link\"\n          >\n            View / Update\n          </Link>\n          <button\n            className=\"btn btn-link ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks } = this.props;\n    const tasks = project_tasks.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      } else if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header border-primary text-black card-header-top\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header border-warning text-black card-header-top\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header border-success text-black card-header-top\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport Backlog from \"./Backlog\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">Project: {id}</h1>\n        <br />\n        <Link to={`/addProjectTask/${id}`} className=\"btn start-button mb-3\">\n          <i className=\"fas fa-plus mr-2\"></i> Create Project Task\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    const { id } = this.props.match.params;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light mb-4\">\n                Back to Project Board\n              </Link>\n              <h1 className=\"text-center\">Add Project Task</h1>\n              <p className=\"lead text-center\">\n                Project: {this.state.projectIdentifier}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <h6>Task name</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <h6>Acceptance Criteria</h6>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <div className=\"text-center\">\n                  <input type=\"submit\" className=\"btn start-button mt-4\" />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light mb-4\"\n              >\n                Back to Project Board\n              </Link>\n              <h1 className=\"text-center\">Update Project Task</h1>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <h6>Task name</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <h6>Acceptance Criteria</h6>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Priority</h6>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n                <h6>Status</h6>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <div className=\"text-center\">\n                  <input type=\"submit\" className=\"btn start-button mt-4\" />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"mb-4 landing-title\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"landing-subtile mb-5\">\n                  Create your account to join active projects or start your own\n                </p>\n                <Link to=\"/login\" className=\"btn btn-lg start-button\">\n                  Get started\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-7 register-side-2\">\n              <h1 className=\"text-center mb-5\">Sign Up</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                    required\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-center\">\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-lg start-button text-center mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n            <div className=\"col-md-5 text-center login-side-2\">\n              <h1 className=\"mb-5\">Welcome Back!</h1>\n              <p className=\"mb-5\">\n                To keep connected with us please login with your personal info{\" \"}\n              </p>\n              <Link to=\"/login\" className=\"btn btn-lg btn-ghost\">\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  errors: PropTypes.object.isRequired,\n  createNewUser: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { login } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.login(loginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-5 text-center register-side\">\n              <h1 className=\"mb-5\">Hello, Friend!</h1>\n              <p className=\"mb-5\">\n                Enter your personal details and start journey with us\n              </p>\n              <Link to=\"/register\" className=\"btn btn-lg btn-ghost\">\n                Sign Up\n              </Link>\n            </div>\n            <div className=\"col-md-7 login-side\">\n              <h1 className=\"text-center mb-5\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"text-center\">\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-lg start-button mt-4\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  errors: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport { setJWTToken } from \"./securityUtils/setJWTToken\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n} else {\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}